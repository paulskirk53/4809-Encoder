	
	; PlatformIO template configuration file for MegaCoreX
	; the pyupdi configuration worked for programming the avr4809 chip
; https://github.com/MCUdude/MegaCoreX/
;
;Build variant is 4809 40 pin DIP - PK 

;   Build options: build flags, source filter
;   Hardware options: oscillator type, BOD, UART number, EEPROM retain
;   Upload options: custom upload port, speed, and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options
; https://github.com/MCUdude/MegaCoreX/blob/master/PlatformIO.md
; https://docs.platformio.org/page/projectconf.html
; https://docs.platformio.org/en/latest/platforms/atmelmegaavr.html

[platformio]
; Default build target
;default_envs = ATmega4809_pyupdi_upload    note this line needed if reverting to pyUPDI uploads

; Parameters used for all environments
[env]
platform = atmelmegaavr
framework = arduino
; Chip in use
board = ATmega4809
; Clock frequency in [Hz]
board_build.f_cpu = 16000000L
; Oscillator type (internal or external)
board_hardware.oscillator = internal
; Arduino pinout variant
board_build.variant = 40pin-standard

; Unflag build flags
;build_unflags =

; Extra build flags PK - see https://github.com/MCUdude/MegaCoreX/blob/master/PlatformIO.md for options 
;build_flags =

; Monitor port is auto detected. Override here
;monitor_port = 
; Serial monitor baud rate
monitor_speed = 9600

; MIGHT WANT TO REFERENCE THE HELP PAGE AGAIN and put in some more options(flags) https://docs.platformio.org/en/latest/core/userguide/device/cmd_monitor.html
monitor_flags = 
  --echo

; the section below commented out was working with pyupdi and the 4.7k resistor with toggle switch
;[env:ATmega4809_pyupdi_upload]
; Upload protocol for UPDI upload - from PIO help pages ; see bottom of this page https://github.com/MCUdude/MegaCoreX/blob/master/PlatformIO.md for install

;platform = atmelmegaavr

;board = ATmega4809



;upload_protocol = custom
;upload_speed = 115200
;upload_port = COM9
;upload_flags = 
;    -d
;    atmega4809
;    -c
;    $UPLOAD_PORT
;    -b
;    $UPLOAD_SPEED
;upload_command = pyupdi $UPLOAD_FLAGS -f $SOURCE
; new custome section below trying to get the micrUPDI working

upload_protocol = custom
upload_flags =
    -C
    $PROJECT_PACKAGES_DIR/tool-avrdude-megaavr/avrdude.conf
    -p
    $BOARD_MCU
    -c
    xplainedmini_updi
    -Pusb
    -b115200
upload_command = avrdude $UPLOAD_FLAGS -U flash:w:$SOURCE:i


; run the following command to set fuses
; pio run -e fuses_bootloader -t fuses
; run the following command to set fuses + burn bootloader
; pio run -e fuses_bootloader -t bootloader
;[env:fuses_bootloader]
; Upload protocol for used to set fuses/bootloader
;upload_protocol = ${env:Upload_UPDI.upload_protocol}
;upload_flags =


; Hardware settings
board_hardware.bod    = 2.7v
board_hardware.eesave = yes
board_hardware.uart   = no_bootloader
board_hardware.rstpin = reset

[env:debug]
debug_tool      = custom
debug_server    =
debug_port      = 127.0.0.1:12555
; no such mode - pk build_mode      = debug
debug_load_mode = manual
debug_init_cmds =
  target extended-remote $DEBUG_PORT
  $INIT_BREAK
  